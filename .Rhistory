gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt) %>% as.character
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1]))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
r = cmip6_1950_2000_av %>% subset(1:4)
vt = c("EPOC~(mgC*m^-2*d^-1)", "DO~(mol*m^-3)", "pH", "Temperature~(degree*C)")
plot_fun(r, vt, q_limits = c(0, 1))
?theme
plot_fun <- function(r, vt, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt) %>% as.character
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1]))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("EPOC~(mgC*m^-2*d^-1)", "DO~(mol*m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_1950_2000_sd %>% subset(1:4),
vt = c("EPOC~(mgC*m^-2*d^-1)", "DO~(mol*m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_av %>% subset(1:4),
vt = c("EPOC~(mgC*m^-2*d^-1)", "DO~(mol*m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_av %>% subset(1:4),
vt = c("EPOC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_1950_2000_sd %>% subset(1:4),
vt = c("EPOC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun <- function(r, vt, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("EPOC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("Expor POC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("Expor~POC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("Export~POC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("E.~POC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("Export~POC~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r = cmip6_1950_2000_av %>% subset(1:4),
vt = c("POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_1950_2000_sd %>% subset(1:4),
vt = c("POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_av %>% subset(1:4),
vt = c("POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_ch %>% subset(1:4),
vt = c("POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_ch %>% subset(1:4),
vt = c("delta~POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_ch %>% subset(1:4),
vt = c("DELTA~POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_ch %>% subset(1:4),
vt = c("Delta~POC~flux~(mgC~m^-2*d^-1)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_ch %>% subset(1:4),
vt = c("Delta~POC~flux~(mgC~m^-2*d^-1)", "Delta~DO~(mol~m^-3)", "Delta~pH", "Delta~Temperature~(degree*C)"),
q_limits = c(0, 1))
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4),
vt = c("Delta~POC~flux~(sd)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
)
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4),
vt = c("Delta~POC~flux~(std~dev)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
)
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4),
vt = c("Delta~POC~flux~(sigma)", "DO~(mol~m^-3)", "pH", "Temperature~(degree*C)"),
)
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4),
vt = c("Delta~POC~flux~(sigma)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)"),
)
?cmip6_extoe_constant
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=vt = c("Delta~POC~flux~>~2**sigma~(yr))", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~>~2**sigma~(yr))", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~">"~2**sigma~(yr))", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~">"~2**sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~>~2**sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~2**sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~2*sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~2~sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)")
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~>~sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux>sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux>2~sigma~(yr)", "Delta~DO~(sigma)", "Delta~pH~(sigma)", "Delta~Temperature~(sigma)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux/sigma>2~(yr)", "Delta~DO>2~sigma~(yr)", "Delta~pH>2~sigma~(yr)", "Delta~Temperature>2~sigma~(yr)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux/sigma>2~(yr)", "Delta~DO/sigma>2~(yr)", "Delta~pH/sigma>2~(yr)", "Delta~Temperature/sigma>2~(yr)"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("Delta~POC~flux~(sigma)>2", "Delta~DO~(sigma)>2", "Delta~pH~(sigma)>2", "Delta~Temperature~(sigma)>2"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("When~Delta~POC~flux~(sigma)>2", "Delta~DO~(sigma)>2", "Delta~pH~(sigma)>2", "Delta~Temperature~(sigma)>2"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
plot_fun(r=cmip6_extoe_constant %>% subset(1:4),
vt=c("When~Delta~POC~flux~(sigma)>2", "When~Delta~DO~(sigma)>2", "When~Delta~pH~(sigma)>2", "When~Delta~Temperature~(sigma)>2"),
colours = brewer.pal(10, 'RdYlBu'), q_limits = c(0, 1))
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% as.data.frame(xy = TRUE) %>% na.omit
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(all) +
geom_raster(aes(x=x, y=y, fill=layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~Delta~POC~flux~(sigma)*","~Delta~DO~(sigma)*","~Delta~pH~(sigma)*", and"~Delta~Temperature~(sigma)>2))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
?theme
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% as.data.frame(xy = TRUE) %>% na.omit
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(all) +
geom_raster(aes(x=x, y=y, fill=layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~climate~changes>2*sigma))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% as.data.frame(xy = TRUE) %>% na.omit
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(all) +
geom_raster(aes(x=x, y=y, fill=layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~climate~change>2*sigma(yr)))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% as.data.frame(xy = TRUE) %>% na.omit
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(all) +
geom_raster(aes(x=x, y=y, fill=layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~climate~change>2*sigma~(yr)))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
all <- overlay(subset(cmip6_extoe_constant, 1:4), fun=max) %>% as.data.frame(xy = TRUE) %>% na.omit
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(all) +
geom_raster(aes(x=x, y=y, fill=layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~climate~change>2*sigma))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
cum_imp <- function(r){
# Negative cumulative impact (exposure to climate change hazards for epc<0, o2<0, ph<0, and thetao>0)
n2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
# Positive cumulative impact (exposure to climate change hazards for epc>0, o2>0, ph>0, and thetao<0)
p2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x<0]<-NA; return(x)}),
calc(subset(r, 4), fun=function(x){x[x>0]<-NA; return(-x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
out <- addLayer(n2050, p2050)
names(out) <- c("Negative", "Positive")
out <- mask(out, etopo2022)
return(out)
}
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative~negative~impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative-impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative-impact~(sigma)", "Cumulative+impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative~negative~impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
?cmip6_2041_2060_voccMeg
plot_fun(r=cmip6_2041_2060_voccMeg %>% subset(1:4),
vt = c("POC~flux~(km~yr^-1)", "DO~(km~yr^-1)", "pH~(km~yr^-1)", "Temperature~(km~yr^-1)"),
q_limits=c(0.01, 0.99))
plot_fun(r=cmip6_2041_2060_voccMeg %>% cum_imp,
vt=c("Cumulative~negative~impact~(km~yr^-1)", "Cumulative~positivce~impact~(km~yr^-1)"),
q_limits = c(0, 0.99))
?etop2002
?etop2022
?etoop2022
?etopo2022
?etopo2022
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL)+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title="Depth (m)")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
help("cmip6_1950_2000_av")
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(ArgentinaSSP126)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
bathy <- etopo2022  %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
#geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_sf(data=as(canyon, "sf"), colour="blue")+
geom_sf(data=as(seamount, "sf"), size=0.5, colour="red")+
geom_sf(data=as(coral, "sf"), size=0.5, colour="black")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title="Depth (m)")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
plot_fun <- function(r, vt, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun <- function(r, vt=NULL, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4) %>% mask(eez))
names(r)
plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4) %>% mask(eez))
