geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=expression(When~climate~change>2*sigma))+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
cum_imp <- function(r){
# Negative cumulative impact (exposure to climate change hazards for epc<0, o2<0, ph<0, and thetao>0)
n2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x>0]<-NA; return(-x)}),
calc(subset(r, 4), fun=function(x){x[x<0]<-NA; return(x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
# Positive cumulative impact (exposure to climate change hazards for epc>0, o2>0, ph>0, and thetao<0)
p2050 <- addLayer(calc(subset(r, 1:3), fun=function(x){x[x<0]<-NA; return(x)}),
calc(subset(r, 4), fun=function(x){x[x>0]<-NA; return(-x)})
) %>%　overlay(fun=function(x)sum(x, na.rm=T))
out <- addLayer(n2050, p2050)
names(out) <- c("Negative", "Positive")
out <- mask(out, etopo2022)
return(out)
}
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative~negative~impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative-impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative-impact~(sigma)", "Cumulative+impact~(sigma)")
)
plot_fun(r=cmip6_2041_2060_exsd %>% cum_imp,
vt=c("Cumulative~negative~impact~(sigma)", "Cumulative~positivce~impact~(sigma)")
)
?cmip6_2041_2060_voccMeg
plot_fun(r=cmip6_2041_2060_voccMeg %>% subset(1:4),
vt = c("POC~flux~(km~yr^-1)", "DO~(km~yr^-1)", "pH~(km~yr^-1)", "Temperature~(km~yr^-1)"),
q_limits=c(0.01, 0.99))
plot_fun(r=cmip6_2041_2060_voccMeg %>% cum_imp,
vt=c("Cumulative~negative~impact~(km~yr^-1)", "Cumulative~positivce~impact~(km~yr^-1)"),
q_limits = c(0, 0.99))
?etop2002
?etop2022
?etoop2022
?etopo2022
?etopo2022
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL)+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title="Depth (m)")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
help("cmip6_1950_2000_av")
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(ArgentinaSSP126)
library(ggplot2)
library(dplyr)
library(patchwork)
library(tidyr)
library(RColorBrewer)
library(sf)
bathy <- etopo2022  %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
#geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_sf(data=as(canyon, "sf"), colour="blue")+
geom_sf(data=as(seamount, "sf"), size=0.5, colour="red")+
geom_sf(data=as(coral, "sf"), size=0.5, colour="black")+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title="Depth (m)")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5))
plot_fun <- function(r, vt, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun <- function(r, vt=NULL, colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4) %>% mask(eez))
names(r)
plot_fun <- function(r, vt=names(r), colours=NULL, q_limits=c(0.001, 0.999)){
# Convert raster to data frame and then to list
cmip6 <- as.data.frame(r, xy = TRUE) %>% na.omit %>%
gather(-x, -y, key = "var", value = "value", factor_key = TRUE)
cmip6$var <- factor(cmip6$var, labels = vt)
cmip6_list <- cmip6 %>% group_split(var)
# Depth
bathy <- etopo2022%>% as.data.frame(xy = TRUE) %>% na.omit
# ggolot list
gg_list = lapply(cmip6_list, function(dat) {
# Color key limits and colours
lim1 <- quantile(dat$value, q_limits, na.rm=TRUE)
lim2 <- max(abs(quantile(dat$value, q_limits, na.rm=TRUE)))
# If the raster only have positive values, use sequential color palettes
if(min(lim1) >= 0) {
lims <- lim1; cols <- jet.colors2(7)
# If the raster contains negative values, use diverging color palettes
} else {
lims <- c(-lim2, lim2); cols <- jet.colors3(7)}
# If color pallette is specified, use the specified color palette
if(is.null(colours)) cols <- cols else cols <- colours
# Plot raster layer
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
scale_fill_gradientn(colours=cols, limits=lims)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill=NULL, title=parse(text=dat$var[1] %>% as.character))+
facet_wrap(~ var) +
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'), plot.title = element_text(hjust=0.5), strip.background = element_blank(), strip.text = element_blank())
})
# Wrap ggplot list
wrap_plots(gg_list, nrow=1)
}
plot_fun(r=cmip6_2041_2060_exsd %>% subset(1:4) %>% mask(eez))
install.packages("rJava")
knitr::opts_chunk$set(
collapse = TRUE,
message=FALSE,
warning=FALSE,
comment = "#>"
)
library(ArgentinaSSP126)
library(ggplot2)
library(dplyr)
library(tidyr)
library(sf)
library(robis)
# Download OBIS data
sponge <- occurrence(scientificname = "Demospongiae", areaid = 7)
hake <- occurrence(scientificname = "Merluccius hubbsi", areaid = 7)
shrimp <- occurrence(scientificname = "Pleoticus muelleri", areaid = 7)
crab <- occurrence(scientificname = "Lithodes santolla", areaid = 7)
skate <- occurrence(scientificname = "Psammobatis normani", areaid = 7)
cwc <- as.data.frame(coral)[,c("y", "x", "SPECIES")]
names(cwc) <- c("decimalLatitude", "decimalLongitude", "scientificName")
# Combine all occurrence data
occ <- rbind(hake[, c(6:7, 21)] %>% cbind(Taxa="Argentine hake"),
shrimp[, c(6:7, 21)] %>% cbind(Taxa="Argentina red shrimp"),
crab[, c(6:7, 21)] %>% cbind(Taxa="Chilean king crab"),
skate[, c(6:7, 21)] %>% cbind(Taxa="Shortfin sand skate"),
sponge[, c(2:3, 6)] %>% cbind(Taxa="Demosponge"),
cwc %>% cbind(Taxa="Coldwater coral")
)
library(knitr)
head(hake[, c(6:7, 21)], 5) %>% kable
bathy <- etopo2022 %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit
ggplot(bathy) +
geom_raster(aes(x=x, y=y, fill=-layer))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.5)+
facet_wrap(~Taxa)+
scale_fill_gradientn(colours=terrain.colors(7))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Depth\n(m)")+
theme_bw() %+replace% theme(legend.position = "right", legend.key.width =  unit(0.5, 'cm'),
strip.background = element_blank())
hist <- addLayer(etopo2022, cmip6_1950_2000_av)
names(hist)[-1] <- gsub("_av_1950_to_2000", "", names(cmip6_1950_2000_av))
proj1 <- addLayer(etopo2022, cmip6_2041_2060_av)
names(proj1)[-1] <- gsub("_av_2041_2060", "", names(cmip6_2041_2060_av))
proj2 <- addLayer(etopo2022, cmip6_2081_2100_av)
names(proj2)[-1] <- gsub("_av_2081_2100", "", names(cmip6_2081_2100_av))
library(dismo)
library(doBy)
# Split the occurrence datq by taxa into a list consisting of six sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
raster::extract(hist, occ[,c("decimalLongitude", "decimalLatitude")]) %>% head(5) %>% kable(digits=3)
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
head(dat)
factor(dat$var, labels=c("1951 to 2000", "2041 to 2060", "2081 to 2100"))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("1951 to 2000", "2041 to 2060", "2081 to 2100"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(dismo)
#library(doBy)
# Split the occurrence datq by taxa into a list consisting of six sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(occ %>% group_split(Taxa), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
raster::extract(hist, occ[,c("decimalLongitude", "decimalLatitude")]) %>% head(5) %>% kable(digits=3)
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
dat
r
occ %>% group_split(Taxa)
?group_split
occ$Taxa
levels(occ$Taxa)
occ %>% group_split(.by=Taxa)
library(dismo)
library(doBy)
# Split the occurrence datq by taxa into a list consisting of six sets of occurrence coordinates
# Conduct Mexent modeling on each set independently
r <- lapply(splitBy(~Taxa, occ), FUN = function(x){
# Covert the coordinates to spatial point dataframe
coordinates(x) <- c("decimalLongitude", "decimalLatitude")
# Maxnet modeling
me <-maxent(hist, x)
# Predict habitat suitability
out <- addLayer(predict(me, hist), predict(me, proj1), predict(me, proj2))
names(out) <- c("Y1950_2000", "Y2041_2060", "Y2081_2100")
return(out)
})
raster::extract(hist, occ[,c("decimalLongitude", "decimalLatitude")]) %>% head(5) %>% kable(digits=3)
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(RColorBrewer)
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu'))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=jet.colors2(10))+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
library(plyr)
# For each prediction raster brick, mask the raster layer by Argentina EEZ, convert the prediction raster into data frame, and then stack the data frame for ggplot
dat <- lapply(r, FUN=function(x){
x %>% mask(eez) %>% as.data.frame(xy = TRUE) %>% na.omit %>% gather(-x, -y, key = "var", value = "value")
}) %>% ldply(.id="Taxa")
dat$var <- factor(dat$var, labels=c("2000s", "2050s", "2090s"))
ggplot(dat) +
geom_raster(aes(x=x, y=y, fill=value))+
geom_polygon(data=arg, aes(x=X, y=Y, group=PID), fill="bisque2", colour="transparent")+
geom_sf(data=as(eez, "sf"), fill="transparent", colour="red")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-200, linetype=2, colour="gray50")+
geom_contour(data=bathy, aes(x=x, y=y, z=layer), breaks=-4000, linetype=1, colour="gray50")+
#geom_point(data=occ, aes(x=decimalLongitude, y=decimalLatitude), size=0.2)+
facet_grid(var~Taxa)+
scale_fill_gradientn(colours=brewer.pal(10, 'RdYlBu') %>% rev)+
scale_x_continuous(expand = expansion(mult = 0))+
scale_y_continuous(expand = expansion(mult = 0))+
labs(x=NULL, y=NULL, fill="Habitat\nSuitability")+
theme_bw() %+replace% theme(legend.position = "top", legend.key.width =  unit(1, 'cm'))
?ArgentinaSSP126
